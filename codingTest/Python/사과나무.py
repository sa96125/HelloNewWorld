# 사과나무(다이아몬드)
# 현수의 농장은 n*n의 격자판으로 이루어져 있으며, 각 격자안에는 한 그루의 사과나무가 심어져 있다. n의 크기는 항상 홀수이다.
# 가을이 되어 사과를 수확해야하는데 현수는 격자판안의 사과를 수확할 때 다이아몬드 모양의 격자판만 수확하고 나머지는 격자안의 사과는 새들을 위해 남긴다.
# 만약 n이 5이면 아래의 그림과 같이 진한 부분의 사과를 수확한다.
# 현수가 수확하는 사과의 총개수를 출력하세요.
# ⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈

n = int(input())
board = []
apples = 0

for _ in range(n):
    board.append(list(map(int, input().split())))

for i in range(n):
    if i < (n//2)+1:
        for j in range(2*i+1):
            apples += board[i][j+n//2-i]

    else:
        for j in range(n-2*(i-(n//2))):
            apples += board[i][j+i-(n//2)]

print(apples)

# ⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇
# 풀이: 2차원배열의 규칙적인 위치를 알아내면 된다.

# 문제:
#   2차원배열안에서 서로다른 값의 공식
#   디버깅오류

# 해결:
#   4가지의 조건 변화에 대한 공식 도출
#   제목에 특수문자가 있으면 안된다는 사실..

# 느낀점:
#   수학은 공식이 있어 그것을 대입하면되지만, 원하는 값을 도출하기 위해서 프로그래밍은 그 공식을 만드는 작업을 만들어내는 재미있는 작업인 것 같다.
