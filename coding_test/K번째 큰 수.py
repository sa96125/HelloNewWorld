# K번째 큰 수
# 현수는 1부터 100사이의 자연수가 적힌 N장의 카드를 가지고 있습니다. 같은 숫자의 카드가 여러장 있을 수 있습니다.
# 현수는 이 중 3장을 뽑아 각 카드에 적힌 수를 합한 값을 기록하려고 합니다.
# 3장을 뽑을 수 있는 모든 경우를 기록합니다. 기록한 값 중 K번째로 큰 수를 출력하는 프로그램을 작성하세요.
# 만약 큰 수부터 만들어진 수가 25 25 23 23 22 20 19......이고 K값이 3이라면 K번째 큰 값은 22입니다.
# ⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈

n, k = map(int, input().split())
card = list(map(int, input().split()))
cnt = [0]*300
target = 0

for x in range(n):
    for y in range(x+1, n):
        for z in range(y+1, n):
            cnt[card[x]+card[y]+card[z]] += 1

for x in range(len(cnt)-1, 9, -1):
    if cnt[x] == 0:
        continue
    target += 1

    if target == k:
        print(x)
        break

# ⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇
# 풀이: 생략(easy)

# 문제:
#   3중 for문을 쓰고 또 for문은 써야하는 방법으로 작성하여 엄청 찝찝하다.

# 해결:
#   중복을 제거하는 set()을 이용하면 더욱 간소화할 수있다.
#   set자료구조에 추가하려면 .add()이용하지만 정렬하는 기능은 없기 때문에 다시 리스트구조로 변환한다.
#   .sort(reverse=True) 역순으로 정렬하기

# 느낀점:
#   삼중 포문의 시간복잡도는 경우에수 500이하만 1초안에 처리가능하다. 만약 벗어난다면 어떻게 해결할 것인가에 대한 고민을 빠르게 해야할 것 같다.
#   +추가로 정렬된 데이터에 빠르게 접근하도록 캐쉬를 사용하는 것은 효율이 높다. 이는 동적프로그래밍의 한 요소로 정의된다.
