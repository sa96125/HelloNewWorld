# 대표값
# N명의 학생의 수학점수가 주어집니다. N명의 학생들의 평균(소수 첫째자리 반올림)을 구하고,
# N명의 학생 중 평균에 가장 가까운 학생은 몇 번째 학생인지 출력하는 프로그램을 작성하세요.
# 평균과 가장 가까운 점수가 여러 개일 경우 먼저 점수가 높은 학생의 번호를 답으로 하고,
# 높은 점수를 가진 학생이 여러 명일 경우 그 중 학생번호가 빠른 학생의 번호를 답으로 합니다.
# ⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈

n = int(input())
score = list(map(int, input().split()))
ave = round(sum(score)/len(score))
close = 2**53
target = 0

for x in range(n):
    if abs(ave-score[x]) < close:
        close = abs(ave-score[x])

for x in range(n):
    if abs(ave-score[x]) != close:
        continue
    if score[x] > target:
        target = score[x]

for x in range(n):
    if score[x] == target:
        print(target, x+1)
        break

# ⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇
# 풀이: 평균 값과 각 학생 점수의 절대값을 구한다. 그 값의 최소값이 정답이므로 최소값을 만족하는 학생을 계속 갱신한다.

# 문제:
#   1. 소수 첫째자리 반올림 방법
#   2. 절대값을 구하는 방법
#   3. 쓸때없는 시간복잡도가 생겼다. (for * 3)
#   4. (추가) round_harf_up 방식이 일반적인 반올림이다. 하지만 round()는 round_harf_even방식으로 파이썬에서 round(3.5)일때 3을 반환한다.

# 해결:
#   round(), abs() 함수를 사용한다.
#   for idx, x enumerate(array)를 사용했다면 한번에 인덱스와 값을 추출할 수 있다.

# 느낀점:
#   예전에 풀었던 문제를 다시보고 있는데 함수명 또는 변수의 이름이 눈에 확확 들어오질 않는다. 보다 명확하게 선언해야겠다.
#   풀이와는 다르게 너무 1차원적으로 문제를 해결했다. 그리고 API를 알면 알수록 파이썬의 능률을 높일 수있다.
#   문제는 쉽더라도 사소한것도 놓치지 않도록 연습해야겠다.
