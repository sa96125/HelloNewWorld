def isPrime(x) :
    cash=[0]*(x+1)
    listPrime=[]

    for i in range(2, x+1):
        if cash[i]!=0:
            continue
        listPrime.append(i)        
        for j in range(1, x//i+1):
            cash[i*j]=1

    return listPrime

def reverse(x) :
    y=x[::-1]
    return y 

n=int(input())
numberList=list(input().split())

for i in numberList:
    numReverse= int(reverse(i))
    if numReverse not in isPrime(int(i)):
        continue
    print(numReverse, end=" ")

    

# --------------------------------------------------------------------------------------------------------------------------------------------
# 풀이
1. 소수를 만드는 함수를 만들어 분리시킨다.
2. 이전에 배운 에스테라토스의 체를 이용하여 소수함수를 구현하고, 배열의 인덱싱을 이용해서 리버스함수를 만든다.

# -------------------------------------------------------------------------------------------------------------------------------------------- 
# 문제점:
1. map()
2. out of index
3. 출력 값 형식.

# --------------------------------------------------------------------------------------------------------------------------------------------
# 해결방법:
1. map() 함수는 2개의 argument를 가진다.
2. 배열 범위를 벗어나는 경우는 여러번 경험해봐서 빨리 수정할 수 있지만, 한번에 범위를 정확하게 계산하도록 연습 많이 하면 될 것 같다.
3. print(sep="" 와 end="") 

# --------------------------------------------------------------------------------------------------------------------------------------------
# 느낀점:
사실 이제껏 함수를 분리시켜서 사용하는 코드는 그렇게 많이 경험하지 못했는데 
최근 자바스크립트 콜백함수, 비동기적 실행원리를 공부한 후, 머리 속에 함수를 어떻게 실행하고 분리해야하는지 감이 와서 바로 작성하였다.
누구에게는 정말 쉬운 문제지만 해결하니 정말 뿌듯하다:)