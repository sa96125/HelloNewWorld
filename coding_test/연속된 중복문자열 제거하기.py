# 짝지어 제거하기는, 알파벳 소문자로 이루어진 문자열을 가지고 시작합니다.
# 먼저 문자열에서 같은 알파벳이 2개 붙어 있는 짝을 찾습니다.
# 그다음, 그 둘을 제거한 뒤, 앞뒤로 문자열을 이어 붙입니다.
# 이 과정을 반복해서 문자열을 모두 제거한다면 짝지어 제거하기가 종료됩니다.
# 문자열 S가 주어졌을 때, 짝지어 제거하기를 성공적으로 수행할 수 있는지 반환하는 함수를 완성해 주세요.
# 성공적으로 수행할 수 있으면 1을, 아닐 경우 0을 리턴해주면 됩니다.

# 예를 들어, 문자열 S = baabaa 라면 b aa baa → bb aa → aa → 의 순서로
# 문자열을 모두 제거할 수 있으므로 1을 반환합니다.
# ⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈⨈

s = "baabaa"
tmp = [0]
top = 0

for i in range(len(s)):
    if tmp[top] != s[i]:
        tmp.append(s[i])
        top += 1
    else:
        tmp.pop()
        top -= 1

if tmp[top] == 0:
    print("true")
else:
    print("false")

# ⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇⨇
# 풀이: 스택을 이용하여 문제를 해결 할 수 있다.
#   1. 새로운 스택에 문자가 아닌 값(0)을 하나 초기화 해놓는다. (처음부터 비교하기위해)
#   2. 문자열 s안에 값은 순차대로 스택의 마지막 값과 비교한다.
#   3. 값이 다르면 스택에 추가하고 top의 값을 증가, 같으면 스택의 값을 빼고 top값을 감소.
#   4. 모든 값을 비교한 후 , 스택안에 값이 처음의 0값이면 1을 반환하고 아니면 0을 반환한다.

# 문제:
#   문자열을 자꾸 잘라서 어떻게 해보겠다는 생각이 머리속에 들어와서 해결하지 못해 시간이 오래걸림

# 해결:
#   스택을 사용하면 아주 간단히 해결되는 문제!!

# 느낀점:
#   이전에도 해결한 비슷한 유형의 문제인데 푼지 오래되서 감각을 잃었나보다..
#   연속된 값을 제거하는 것은 스택을 사용한다는 공식 더이상 잊지 말자!!
